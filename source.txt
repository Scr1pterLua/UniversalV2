local DeleteMob ={
	Aimbot= {
		Enabled = false;
		TeamCheck = false;-- Made By Mick Gordon
		WallCheck = false;

		ShowFov = false;
		Fov = 100;

		Smoothing = 0;

		AimPart = "Head";
		-- Made By Mick Gordon
		Keybind = "MouseButton2";


		Thickness = 1;

		FovFillColor = Color3.fromRGB(100,0,100);
		FovColor = Color3.fromRGB(100,0,100);

		FovFillTransparency = 1;
		FovTransparenct = 0;
	};
	ESP ={
		Box = {
			Box = false;-- Made By Mick Gordon
			Name = false;
			Distance = false;
			Health = false;

			TeamCheck = false;

			HealthType = "Bar";

			BoxColor = Color3.fromRGB(85, 0, 255);
		};
		OutLines = {
			Enabled = false;
			TeamCheck = false;
			TeamColor = false;

			AllwaysShow = false;

			FillCollor = Color3.fromRGB(85, 0, 255);
			FillTrancparenct = 0;

			OutlineColor = Color3.fromRGB(0,0,0);
			OutlineTrancparency = 0;
		};
		Tracers = {
			Enabled = false;
			TeamCheck = false;
			TeamColor = false;

			Color = Color3.fromRGB(75,0,10);
		}
	}-- Made By Mick Gordon
}
local UILib = loadstring(game:HttpGet('https://raw.githubusercontent.com/StepBroFurious/Script/main/HydraHubUi.lua'))()
local Window = UILib.new("Hydra", game.Players.LocalPlayer.Name, "Beta")
local Category1 = Window:Category("Main", "http://www.roblox.com/asset/?id=8395621517")
local SubButton3 = Category1:Button("Aimbot", "http://www.roblox.com/asset/?id=8547236654")
local SubButton1 = Category1:Button("Visules", "http://www.roblox.com/asset/?id=8547254518")
local SubButton2 = Category1:Button("Misc", "http://www.roblox.com/asset/?id=8547256547")

local Section1 = SubButton1:Section("Player-Chams", "Left")
local Section3 = SubButton1:Section("Player-Box", "Left")
local Section2 = SubButton2:Section("Ui-Settings", "Left")
local Section5 = SubButton2:Section("Player-WallBang", "Left")
local Section4 = SubButton3:Section("Player-Aimbot", "Left")
local PLAYER = game.Players.LocalPlayer
local Higlight = Instance.new("ScreenGui",game.Workspace)
local CurrentCam  = game.Workspace.CurrentCamera
local WorldToViewportPoint = CurrentCam.WorldToViewportPoint
local TweenService = game:GetService("TweenService")
local Fov = Instance.new("ScreenGui")Fov.Name = "Fov" Fov.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") Fov.ZIndexBehavior = Enum.ZIndexBehavior.Sibling Fov.ResetOnSpawn = false-- i miss you synapse fov
local TracersG = Instance.new("ScreenGui")TracersG.Name = "Tracers" TracersG.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") TracersG.ZIndexBehavior = Enum.ZIndexBehavior.Sibling TracersG.ResetOnSpawn = false
local FOVFFrame = Instance.new("Frame")FOVFFrame.Parent = Fov FOVFFrame.Name = "FOVFFrame" FOVFFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) FOVFFrame.BorderColor3 = Color3.fromRGB(0, 0, 0) FOVFFrame.BorderSizePixel = 0 FOVFFrame.BackgroundTransparency = 1 FOVFFrame.AnchorPoint = Vector2.new(0.5, 0.5) FOVFFrame.Position = UDim2.new(0.5, 0,0.5, 0) FOVFFrame.Size = UDim2.new(0, DeleteMob.Aimbot.Fov, 0, DeleteMob.Aimbot.Fov) FOVFFrame.BackgroundTransparency = 1 
local UICorner = Instance.new("UICorner")UICorner.CornerRadius = UDim.new(1, 0) UICorner.Parent = FOVFFrame -- Made By Mick Gordon
local UIStroke = Instance.new("UIStroke")UIStroke.Color = Color3.fromRGB(100,0,100) UIStroke.Parent = FOVFFrame UIStroke.Thickness = 1 UIStroke.ApplyStrokeMode = "Border" 
local BoxC = Instance.new("ScreenGui", game.Workspace) BoxC.Name = "Box"
local Higlight = Instance.new("ScreenGui",game.Workspace)
local UIS = game:GetService("UserInputService")-- Made By Mick Gordon
local WorldToViewportPoint = CurrentCam.WorldToViewportPoint
local mouseLocation = UIS.GetMouseLocation
local connections = {}
local keybind = Enum.KeyCode.Home
--player ~= PLAYER and
local toggle = false
local aimbotkey = Enum.KeyCode.Z
local function AddBox(player)
	local bbg = Instance.new("BillboardGui", BoxC)
	bbg.Name = player.Name
	bbg.AlwaysOnTop = true
	bbg.Size = UDim2.new(4,0,5.4,0)
	bbg.ClipsDescendants = false
	bbg.Enabled = false

	local outlines = Instance.new("Frame", bbg)
	outlines.Size = UDim2.new(1,0,1,0)
	outlines.BorderSizePixel = 1
	outlines.BackgroundTransparency = 1
	local left = Instance.new("Frame", outlines)
	left.BorderSizePixel = 1
	left.Size = UDim2.new(0,(1),1,0)
	local right = left:Clone()
	right.Parent = outlines
	right.Size = UDim2.new(0,-(1),1,0)   
	right.Position = UDim2.new(1,0,0,0)
	local up = left:Clone()-- Made By Mick Gordon
	up.Parent = outlines
	up.Size = UDim2.new(1,0,0,(1))
	local down = left:Clone()
	down.Parent = outlines
	down.Size = UDim2.new(1,0,0,-(1))
	down.Position = UDim2.new(0,0,1,0)

	local info = Instance.new("BillboardGui", bbg)
	info.Name = "info"
	info.Size = UDim2.new(3,0,0,54)
	info.StudsOffset = Vector3.new(3.6,-3,0)
	info.AlwaysOnTop = true
	info.ClipsDescendants = false
	info.Enabled = false
	local namelabel = Instance.new("TextLabel", info)
	namelabel.Name = "namelabel"
	namelabel.BackgroundTransparency = 1
	namelabel.TextStrokeTransparency = 0
	namelabel.TextXAlignment = Enum.TextXAlignment.Left
	namelabel.Size = UDim2.new(0,100,0,18)
	namelabel.Position = UDim2.new(0,0,0,0)
	namelabel.Text = player.Name
	namelabel.Font = Enum.Font.Ubuntu
	local distancel = Instance.new("TextLabel", info)
	distancel.Name = "distancelabel"
	distancel.BackgroundTransparency = 1-- Made By Mick Gordon
	distancel.TextStrokeTransparency = 0
	distancel.TextXAlignment = Enum.TextXAlignment.Left
	distancel.Size = UDim2.new(0,100,0,18)
	distancel.Position = UDim2.new(0,0,0,18)
	distancel.TextColor3 = Color3.fromRGB(255,255,255)
	distancel.Font = Enum.Font.Ubuntu




	local healthl = Instance.new("TextLabel", info)
	healthl.Name = "healthlabel"
	healthl.BackgroundTransparency = 1
	healthl.TextStrokeTransparency = 0
	healthl.TextXAlignment = Enum.TextXAlignment.Left
	healthl.Size = UDim2.new(0,100,0,18)
	healthl.Position = UDim2.new(0,0,0,36)

	local uill = Instance.new("UIListLayout", info)

	local forhealth = Instance.new("BillboardGui", bbg)
	forhealth.Name = "forhealth"
	forhealth.Size = UDim2.new(4.5,0,6,0)
	forhealth.AlwaysOnTop = true
	forhealth.ClipsDescendants = false
	forhealth.Enabled = false

	local healthbar = Instance.new("Frame", forhealth)
	healthbar.Name = "healthbar"
	healthbar.BackgroundColor3 = Color3.fromRGB(40,40,40)
	healthbar.BorderColor3 = Color3.fromRGB(0,0,0)
	healthbar.Size = UDim2.new(0.04,0,0.9,0)
	healthbar.Position = UDim2.new(0,0,0.05,0)
	local bar = Instance.new("Frame", healthbar)
	bar.Name = "bar"
	bar.BorderSizePixel = 0
	bar.BackgroundColor3 = Color3.fromRGB(94,255,69)
	bar.AnchorPoint = Vector2.new(0,1)
	bar.Position = UDim2.new(0,0,1,0)
	bar.Size = UDim2.new(1,0,1,0)

	-- Made By Mick Gordon
	local co = coroutine.create(function()
		while wait(0.1) do
			if player ~= PLAYER and  player and player.Character and player.Character.FindFirstChild(player.Character, "Humanoid") and player.Character.Humanoid.Health > 0 then
				bbg.Adornee = player.Character:FindFirstChild("HumanoidRootPart")
				info.Adornee = player.Character:FindFirstChild("HumanoidRootPart")
				forhealth.Adornee = player.Character:FindFirstChild("HumanoidRootPart")

				if DeleteMob.ESP.Box.Box == true then
					outlines.Visible = true
				else
					outlines.Visible = false
				end

				outlines.BackgroundTransparency = 1

				if DeleteMob.ESP.Box.Health == true then
					if player.Character:FindFirstChild("Humanoid") ~= nil then
						healthl.Text = "Health: "..math.floor(player.Character:FindFirstChild"Humanoid".Health)
						healthbar.bar.Size = UDim2.new(1,0,player.Character:FindFirstChild"Humanoid".Health/player.Character:FindFirstChild"Humanoid".MaxHealth,0)
					end
					if DeleteMob.ESP.Box.HealthType == "Text" then
						healthbar.Visible = false
						healthl.Visible = true
					end-- Made By Mick Gordon
					if DeleteMob.ESP.Box.HealthType == "Bar" then
						healthl.Visible = false
						healthbar.Visible = true
					end
					if DeleteMob.ESP.Box.HealthType == "Both" then
						healthl.Visible = true
						healthbar.Visible = true
					end
				else
					healthl.Visible = false
					healthbar.Visible = false
				end


				if DeleteMob.ESP.Box.Name then
					namelabel.Visible = true
				else
					namelabel.Visible = false
				end

				-- Made By Mick Gordon
				if DeleteMob.ESP.Box.Distance == true then
					distancel.Visible = true
					if PLAYER.Character and PLAYER.Character:FindFirstChild("HumanoidRootPart") ~= nil then
						distancel.Text = "Distance: "..math.floor(0.5+(PLAYER.Character:FindFirstChild"HumanoidRootPart".Position - player.Character:FindFirstChild"HumanoidRootPart".Position).magnitude)
					end
				else
					distancel.Visible = false
				end


				if DeleteMob.ESP.Box.TeamCheck == true and player.TeamColor == PLAYER.TeamColor then
					bbg.Enabled = false
					info.Enabled = false
					forhealth.Enabled = false
				else
					bbg.Enabled = true
					info.Enabled = true
					forhealth.Enabled = true
				end
				-- Made By Mick Gordon

				if DeleteMob.ESP.Box.TeamColor == true then
					left.BackgroundColor3 = player.TeamColor.Color
					right.BackgroundColor3 = player.TeamColor.Color
					up.BackgroundColor3 = player.TeamColor.Color
					down.BackgroundColor3 = player.TeamColor.Color
					outlines.BackgroundColor3 = DeleteMob.ESP.Box.BoxColor
				else
					outlines.BackgroundColor3 = DeleteMob.ESP.Box.BoxColor
					left.BackgroundColor3 = DeleteMob.ESP.Box.BoxColor
					right.BackgroundColor3 = DeleteMob.ESP.Box.BoxColor
					up.BackgroundColor3 = DeleteMob.ESP.Box.BoxColor
					down.BackgroundColor3 = DeleteMob.ESP.Box.BoxColor
					healthl.TextColor3 = DeleteMob.ESP.Box.BoxColor
					distancel.TextColor3 = DeleteMob.ESP.Box.BoxColor
					namelabel.TextColor3 = DeleteMob.ESP.Box.BoxColor
				end

				if not (game:GetService"Players":FindFirstChild(player.Name)) then
					BoxC:FindFirstChild(player.Name):Destroy()
					coroutine.yield()
				end-- Made By Mick Gordon
			else
				bbg.Enabled = false
				bbg.Adornee = nil
				info.Adornee = nil
				info.Enabled = false
				forhealth.Adornee = nil
				forhealth.Enabled = false
			end
		end 
	end)
	coroutine.resume(co)
end
function iisVisible(p, ...)


	return #CurrentCam:GetPartsObscuringTarget({ p }, { CurrentCam, PLAYER.Character, ... }) == 0 
end-- Made By Mick Gordon
function AddHighlight(plr)

	local Highlight = Instance.new("Highlight")
	Highlight.Parent = Higlight
	Highlight.Name = plr.Name
	Highlight.Enabled = DeleteMob.ESP.OutLines.Enabled
	local plrchar = plr.Character
	if plrchar then
		Highlight.Adornee = plrchar
	end
	connections[plr] = plr.CharacterAdded:Connect(function(char)
		Highlight.Adornee = char
	end)
	local co = coroutine.create(function()
		while wait(.1) do
			if plr ~= PLAYER and    plr and plr.Character and plr.Character.FindFirstChild(plr.Character, "Humanoid") and plr.Character.Humanoid.Health > 0 and DeleteMob.ESP.OutLines.Enabled == true  then
				
				if DeleteMob.ESP.OutLines.Enabled == true then
					if DeleteMob.ESP.OutLines.TeamCheck == true and plr.TeamColor == PLAYER.TeamColor then
						Highlight.Enabled = false
					else
						Highlight.Enabled = true
					end
				else-- Made By Mick Gordon
					Highlight.Enabled = false
				end
				
                 

				if DeleteMob.ESP.OutLines.AllwaysShow == true then
					Highlight.DepthMode = "AlwaysOnTop" 
				else
					Highlight.DepthMode = "Occluded" 
				end-- Made By Mick Gordon

				Highlight.OutlineTransparency = DeleteMob.ESP.OutLines.OutlineTrancparency
				if DeleteMob.ESP.OutLines.FancyChams then
					local targetFillColor = iisVisible(plr.Character.Head.Position, plr.Character.Head.Parent) 
						and Color3.fromRGB(170, 0, 255) or Color3.fromRGB(85, 0, 255)
					local fillTween = TweenService:Create(Highlight, TweenInfo.new(0.15), { FillColor = targetFillColor })
					fillTween:Play()
				else
					Highlight.FillColor = DeleteMob.ESP.OutLines.FillCollor
				end
				

				-- Tween the FillColor
				
				Highlight.OutlineColor = DeleteMob.ESP.OutLines.OutlineColor
				Highlight.FillTransparency = DeleteMob.ESP.OutLines.FillTrancparenct

				if not (game:GetService"Players":FindFirstChild(plr.Name)) then
					Higlight:FindFirstChild(plr.Name):Destroy()
					coroutine.yield()
				end
			else
				Highlight.Enabled = false
			end
		end
	end)
	coroutine.resume(co)
end
function aisVisible(p, ...)

	if not (DeleteMob.Aimbot.WallCheck == true) then
		return true
	end

	return #CurrentCam:GetPartsObscuringTarget({ p }, { CurrentCam, PLAYER.Character, ... }) == 0 
end-- Made By Mick Gordon

function CameraGetClosestToMouse(Fov)
	local AimFov = Fov
	local targetPos = nil

	for i,v in pairs (game:GetService("Players"):GetPlayers()) do
		if v ~= PLAYER then
			if DeleteMob.Aimbot.TeamCheck == true then
				if v.Character and v.Character:FindFirstChild(DeleteMob.Aimbot.AimPart) and v.Character.Humanoid and v.Character.Humanoid.Health > 0 and not (v.Team == PLAYER.Team) then
					local screen_pos, on_screen = WorldToViewportPoint(CurrentCam, v.Character[DeleteMob.Aimbot.AimPart].Position)
					local screen_pos_2D = Vector2.new(screen_pos.X, screen_pos.Y)
					local new_magnitude = (screen_pos_2D - mouseLocation(UIS)).Magnitude
					if on_screen and new_magnitude < AimFov and aisVisible(v.Character[DeleteMob.Aimbot.AimPart].Position, v.Character.Head.Parent) then
						AimFov = new_magnitude
						targetPos = v-- Made By Mick Gordon
					end
				end-- Made By Mick Gordon
			else
				if v.Character and v.Character:FindFirstChild(DeleteMob.Aimbot.AimPart) and v.Character.Humanoid and v.Character.Humanoid.Health > 0 then
					local screen_pos, on_screen = WorldToViewportPoint(CurrentCam, v.Character[DeleteMob.Aimbot.AimPart].Position)
					local screen_pos_2D = Vector2.new(screen_pos.X, screen_pos.Y)
					local new_magnitude = (screen_pos_2D - mouseLocation(UIS)).Magnitude
					if on_screen and new_magnitude < AimFov and aisVisible(v.Character[DeleteMob.Aimbot.AimPart].Position, v.Character.Head.Parent) then
						AimFov = new_magnitude
						targetPos = v
					end
				end
			end
		end
	end
	return targetPos
end


local function aimAt(pos, smooth)
	local AimPart = pos.Character:FindFirstChild(DeleteMob.Aimbot.AimPart)
	if AimPart then
		local LookAt = nil
		local Distance = math.floor(0.5+(PLAYER.Character:FindFirstChild"HumanoidRootPart".Position - pos.Character:FindFirstChild"HumanoidRootPart".Position).magnitude)
		if Distance > 100  then
			local distChangeBig = Distance / 10
			LookAt = CurrentCam.CFrame:PointToWorldSpace(Vector3.new(0,0,-smooth * distChangeBig)):Lerp(AimPart.Position,.01) -- No one esle do camera smoothing ? tf
		else-- Made By Mick Gordon
			local distChangeSmall = Distance / 10
			LookAt = CurrentCam.CFrame:PointToWorldSpace(Vector3.new(0,0,-smooth * distChangeSmall)):Lerp(AimPart.Position,.01) -- No one esle do camera smoothing ? tf
		end
		CurrentCam.CFrame = CFrame.lookAt(CurrentCam.CFrame.Position, LookAt)
	end
end
local ui = game:GetService("UserInputService")
-- Made By Mick Gordon

game:GetService('RunService').RenderStepped:connect(function()

	-- Aimbot Check
	if DeleteMob.Aimbot.Enabled == true then 
		if  toggle then
			local _pos = CameraGetClosestToMouse(DeleteMob.Aimbot.Fov)
			if _pos then
				aimAt(_pos, DeleteMob.Aimbot.Smoothing)
			end
		end
	end 

	-- Fov

	local acc = DeleteMob.Aimbot.Smoothing / 2	
	local posd = UIS:GetMouseLocation() 
	FOVFFrame.Position = UDim2.new(0, posd.X, 0, posd.Y - 36)
	FOVFFrame.Size = UDim2.new(0, DeleteMob.Aimbot.Fov + acc, 0, DeleteMob.Aimbot.Fov + acc)
	FOVFFrame.Visible = DeleteMob.Aimbot.ShowFov
	FOVFFrame.BackgroundColor3 = DeleteMob.Aimbot.FovFillColor
	FOVFFrame.Transparency = DeleteMob.Aimbot.FovFillTransparency

	UIStroke.Color = DeleteMob.Aimbot.FovFillColor
	UIStroke.Transparency = DeleteMob.Aimbot.FovTransparenct
	UIStroke.Thickness = DeleteMob.Aimbot.Thickness

end)

game:GetService('RunService').RenderStepped:connect(function()

	local on = script.Parent.Parent:GetAttribute("enabled")
	if on then


		DeleteMob.Aimbot.Enabled = false
		DeleteMob.Aimbot.ShowFov = false









	else if on == false then
			

			
		
			DeleteMob.Aimbot.Enabled = true
			DeleteMob.Aimbot.ShowFov = true

		end

	end
end)
-- Aimbot Settings
Section4:Toggle({
	Title = "Aimbot",
	ButtonName = "Enable",
	Description = "Toggle aimbot.",
	DeleteMob.Aimbot.Enabled
}, function(value)

	DeleteMob.Aimbot.Enabled = value
end)

Section4:Toggle({
	Title = "Wall Check",
	ButtonName = "Enable",
	Description = "Check walls.",
	DeleteMob.Aimbot.WallCheck
}, function(value)
	
	DeleteMob.Aimbot.WallCheck = value
end)

Section4:Toggle({
	Title = "Show FOV",
	ButtonName = "Enable",
	Description = "Display FOV.",
	DeleteMob.Aimbot.ShowFov
}, function(value)
	
	DeleteMob.Aimbot.ShowFov = value
end)

Section4:Slider({
	Title = "FOV Size",
	Description = "Adjust FOV.",
	Default = 100,
	Min = 0,
	Max = 1000
}, function(value)
	
	DeleteMob.Aimbot.Fov = value
end)

Section4:Slider({
	Title = "Smoothing",
	Description = "Adjust aim smoothness.",
	Default = 0,
	Min = 0,
	Max = 10
}, function(value)
	
	DeleteMob.Aimbot.Smoothing = value
end)

Section4:Keybind({
	Title = "Aimbot Keybind",
	ButtonName = "Enable",
	Description = "Keybind for aimbot.",
	Default = aimbotkey
}, function(value)
	toggle = not toggle

end)

-- ESP Settings
Section3:Toggle({
	Title = "ESP Box",
	ButtonName = "Enable",
	Description = "Toggle ESP box.",
	DeleteMob.ESP.Box.Box
}, function(value)

	DeleteMob.ESP.Box.Box = value
end)

Section3:Toggle({
	Title = "Health Display",
	ButtonName = "Enable",
	Description = "Show health.",
	DeleteMob.ESP.Box.Health
}, function(value)
	
	DeleteMob.ESP.Box.Health = value
end)

Section3:Toggle({
	Title = "Team Check",
	ButtonName = "Enable",
	Description = "Check team.",
	DeleteMob.ESP.Box.TeamCheck
}, function(value)

	DeleteMob.ESP.Box.TeamCheck = value
end)

-- Chams Settings
Section1:Toggle({
	Title = "Chams",
	ButtonName = "Enable",
	Description = "Toggle chams.",
	DeleteMob.ESP.OutLines.Enabled
}, function(value)
	
	DeleteMob.ESP.OutLines.Enabled = value
end)

Section1:Toggle({
	Title = "Fancy Chams",
	ButtonName = "Enable",
	Description = "Color by visibility.",
	DeleteMob.ESP.OutLines.FancyChams
}, function(value)
	
	DeleteMob.ESP.OutLines.FancyChams = value
end)

Section1:Toggle({
	Title = "Always Visible",
	ButtonName = "Enable",
	Description = "Chams always on top.",
	DeleteMob.ESP.OutLines.AllwaysShow
}, function(value)

	DeleteMob.ESP.OutLines.AllwaysShow = value
end)

-- Color Settings
Section3:ColorPicker({
	Title = "ESP Color",
	Description = "",
	Default = DeleteMob.ESP.Box.BoxColor,
}, function(value)
	
	DeleteMob.ESP.Box.BoxColor = value
end)

Section1:Toggle({
	Title = "Team Check",
	ButtonName = "Enable",
	Description = "Check team.",
	DeleteMob.ESP.OutLines.TeamCheck
}, function(value)
	
	DeleteMob.ESP.OutLines.TeamCheck = value
end)

Section1:ColorPicker({
	Title = "ChamColor",
	Description = "",
	Default = DeleteMob.ESP.OutLines.FillCollor,
}, function(value)

	DeleteMob.ESP.OutLines.FillCollor = value
end)
local togglee = false

-- Function to toggle and print
local function togglePrint()
	togglee = not togglee -- Toggle between true and false

	if togglee then
		for _, i in pairs(PLAYER.PlayerGui:GetDescendants()) do
			if i.Name == "Window" then
				if i:IsA("Frame") then
					i.Parent.Enabled = true
				end
			end
		end
		

	else
		for _, i in pairs(PLAYER.PlayerGui:GetDescendants()) do
			if i.Name == "Window" then
				if i:IsA("Frame") then
					i.Parent.Enabled = false
				end
			end
		end
		
	end
end
Section2:Keybind({
	Title = "Menu Keybind",
	Description = "Toggle UI.",
	Default = keybind,
}, function(value)
	togglePrint()
end)

local threshold = 0 -- Set the initial threshold
local highlightedParts = {} -- Table to keep track of highlighted parts
local standcolor = Color3.new(1,0,0)
local function isPartOfPlayer(part)
	local model = part:FindFirstAncestorOfClass("Model")
	return model and model:FindFirstChildOfClass("Humanoid") ~= nil
end

local function isValidPart(part)
	return part:IsA("BasePart") and not part:IsA("Terrain")
end

local function highlightPartsUnderWidth(limit)
	-- Remove existing highlights first
	for part, highlight in pairs(highlightedParts) do
		if highlight then
			highlight:Destroy() -- Remove the highlight from the part
			highlightedParts[part] = nil -- Remove the entry from the table
		end
	end

	-- Loop through all the parts in the workspace
	for _, object in ipairs(workspace:GetDescendants()) do
		if isValidPart(object) and not isPartOfPlayer(object) then
			local width = object.Size.X
			if width <= limit and not highlightedParts[object] then
				-- Create a Highlight instance to highlight the part
				local highlight = Instance.new("Highlight")
				highlight.Adornee = object
				highlight.FillColor = standcolor -- Yellow fill color
				highlight.OutlineColor = Color3.new(0, 0, 0) -- Red outline color
				highlight.Parent = object
				

				highlightedParts[object] = highlight -- Track the highlighted part
			
			end
		end
	end
end
local ontogglefun = false
Section5:Toggle({
	Title = "Wall Bang",
	ButtonName = "Enable",
	Description = "Toggle wallbang.",
	ontogglefun
}, function(value)

	ontogglefun = value
end)
Section5:Slider({
	Title = "Wall Bang Threshold",
	Description = "Set wall bang value.",
	Default = 0,  -- Set a sensible default value for wall bang threshold
	Min = 0,
	Max = 20
}, function(value)
	
	threshold = value  -- Update the threshold variable to the new value
end)
Section5:ColorPicker({
	Title = "Part Color",
	Description = "",
	Default = standcolor,
}, function(value)

	standcolor = value
end)
-- Function to set the threshold and refresh highlights
game:GetService("RunService").Heartbeat:Connect(function()
	if ontogglefun then
		highlightPartsUnderWidth(threshold)
	else
		for part, highlight in pairs(highlightedParts) do
			if highlight then
				highlight:Destroy() -- Remove the highlight from the part
				highlightedParts[part] = nil -- Remove the entry from the table
			end
		end
	end
	
end)

for i,plr in pairs(game.Players:GetChildren()) do
	AddHighlight(plr)
	AddBox(plr)
end

game.Players.PlayerAdded:Connect(function(plr)
	AddHighlight(plr)
	AddBox(plr)
end)
